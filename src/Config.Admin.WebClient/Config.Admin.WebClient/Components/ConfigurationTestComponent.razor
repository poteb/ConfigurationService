@using pote.Config.Admin.WebClient.Services
@using pote.Config.Admin.WebClient.Misc
@using System.Text

@if (1 == 2) { /* This component is used to display test result as icons. */ }
@if (HeaderTestContainer == null! || HeaderTestContainer.TestStage == TestStages.NotStarted)
{
    <MudTooltip Text="Not tested, click to test">
        <MudIconButton Icon="@Icons.Material.Filled.Check" Size="Size.Small" Style="@($"color:{Colors.Grey.Lighten2}")" OnClick="Test"></MudIconButton>
    </MudTooltip>
}
else if (HeaderTestContainer.TestStage == TestStages.InProgress)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" Size="Size.Small"/>
}
else if (HeaderTestContainer.TestStage == TestStages.Complete)
{
    <MudTooltip Text="Success">
        <MudIconButton Icon="@Icons.Material.Filled.Check" Size="Size.Small" OnClick="Test"></MudIconButton>
    </MudTooltip>
}
else if (HeaderTestContainer.TestStage == TestStages.Failed)
{
    <MudTooltip Placement="Placement.Left">
        <ChildContent>
            <MudIconButton Icon="@Icons.Material.Filled.ErrorOutline" Size="Size.Small" Color="Color.Error" OnClick="Test"></MudIconButton>
        </ChildContent>
        <TooltipContent>
            @foreach (var error in GetErrorText())
            {
                <MudText Style="white-space: nowrap;font-size: 8pt">@error</MudText>
            }
        </TooltipContent>
    </MudTooltip>
}

@code {
    [Parameter] public IHeaderTestContainer HeaderTestContainer { get; set; } = null!;

    private List<string> GetErrorText()
    {
        var list = new List<string>();
        foreach (var response in HeaderTestContainer.ParseResponses.Values)
            foreach (var r in response.Where(r => r.Problems.Any()))
                list.AddRange(r.Problems);
        return list;
    }

    private async Task Test()
    {
        await HeaderTestContainer.RunTests();
    }
}